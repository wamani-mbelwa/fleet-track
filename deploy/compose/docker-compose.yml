version: "3.9"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: [ "2181:2181" ]

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on: [ zookeeper ]
    ports: [ "9092:9092" ]
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: fleetpay
      POSTGRES_USER: fleet
      POSTGRES_PASSWORD: fleet
    ports: [ "5432:5432" ]

  cassandra:
    image: cassandra:5
    environment:
      - CASSANDRA_CLUSTER_NAME=Test Cluster
      - CASSANDRA_START_RPC=true
    ports: [ "9042:9042" ]

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports: [ "9090:9090" ]

  grafana:
    image: grafana/grafana:latest
    ports: [ "3000:3000" ]
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  gateway:
    build: ../../gateway
    depends_on: [ auth-service, card-service, transaction-service, statement-service ]
    environment: { }
    ports: [ "8088:8080" ]

  auth-service:
    build: ../../auth-service
    depends_on: [ postgres ]
  card-service:
    build: ../../card-service
    depends_on: [ postgres ]
  transaction-service:
    build: ../../transaction-service
    depends_on: [ postgres, kafka ]
  statement-service:
    build: ../../statement-service
    depends_on: [ cassandra, kafka ]
